name: Test

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:
    branches: "*"

jobs:
  test:
    strategy:
      matrix:
        os:
          # https://github.com/actions/virtual-environments/blob/ubuntu20/20201210.0/images/linux/Ubuntu2004-README.md
          - ubuntu-20.04
          # https://github.com/actions/virtual-environments/blob/macOS-10.15/20201212.1/images/macos/macos-10.15-Readme.md
          - macos-10.15
          # https://github.com/actions/virtual-environments/blob/win19/20201210.0/images/win/Windows2019-Readme.md
          - windows-2019
        go-version:
          - 1.13.x
          - 1.14.x
          - 1.15.x
    runs-on: ${{ matrix.os }}

    steps:
    - name: Set flag environment variable
      run: |
        echo "OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "GO_VERSION=$(echo ${{ matrix.go-version }} | cut -d. -f-2)" >> $GITHUB_ENV

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Install nvim binary
      uses: rhysd/action-setup-vim@v1
      if: runner.os == 'Windows'
      with:
        neovim: true
        version: nightly

    - name: Install nvim binary for Windows
      uses: rhysd/action-setup-vim@v1
      if: runner.os != 'Windows'
      with:
        neovim: true
        version: stable

    - name: Test and vet
      run: |
        diff -u <(echo -n) <(gofmt -s -d .)
        go vet ./...
        go test -v -race -covermode=atomic -coverpkg=./... -coverprofile=coverage.out ./...

    - uses: codecov/codecov-action@v1
      with:
        file: coverage.out
        flags: ${{ env.OS }}-${{ env.GO_VERSION }}
        fail_ci_if_error: true
